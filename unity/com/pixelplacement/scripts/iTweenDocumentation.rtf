{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf460
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww24640\viewh16520\viewkind0
\deftab709
\pard\pardeftab709\ql\qnatural

\f0\b\fs36 \cf0 iTween Documentation
\b0\fs24 \
\
\

\b\fs28 Start an iTween:
\b0\fs24 \
\
iTween.moveTo(gameObject,1,1,1,1,0,"easeInOutQuint");\
\
\
\

\b\fs28 Management Methods:
\b0\fs24 \
\

\b stop
\b0 (obj: GameObject) : void\
- Stops and destroys all iTweens for the supplied GameObject.\
\

\b getTweenCount
\b0 (obj: GameObject) : int\
- Returns an integer of the total iTweens running on the supplied GameObject.\
\
\
\

\b\fs28 Movement Methods:
\b0\fs24 \
\

\b punchPosition
\b0 (obj: GameObject,x: float,y: float,z: float,duration: float,delay: float) : void\
- Applies a jolt of force on the given access and springs the GameObject back to its original position like a punching bag.\
- Negative/positive values dictate the direction of the applies force.\
\

\b moveTo
\b0 (obj: GameObject,x: float,y: float,z: float,duration: float,delay: float, easing: String) : void \
- Moves the GameObject to the supplied coordinates.\
\

\b moveFrom
\b0 (obj: GameObject,x: float,y: float,z: float,duration: float,delay: float, easing: String) : void\
- Moves the GameObject from the supplied coordinates\
\

\b fadeTo
\b0 (obj: GameObject,endA: float,duration: float,delay: float) : void\
- Fades the material of the GameObject to the supplied alpha.\
- Only works if the GameObject's material calculates transparency.\
\

\b fadeFrom
\b0 (obj: GameObject,endA: float,duration: float,delay: float) : void\
- Fades the material of the GameObject from the supplied alpha.\
- Only works if the GameObject's material calculates transparency.\
\

\b rotateTo
\b0 (obj: GameObject,x: float,y: float,z: float,duration: float,delay: float, easing: String) : void\
- Rotates the GameObject to the supplied degrees.\
- Rotation direction is automatically decided based on shortest travel time.\
- Does not apply to GUITextures.\
\

\b rotateFrom
\b0 (obj: GameObject,x: float,y: float,z: float,duration: float,delay: float, easing: String) : void\
- Rotates the GameObject from the supplied degrees.\
- Rotation direction is automatically decided based on shortest travel time.\
- Does not apply to GUITextures.\
\

\b rotateBy
\b0 (obj: GameObject,x: float,y: float,z: float,duration: float,delay: float, easing: String) : void\
- Rotates the GameObject 360 degrees times the supplied multiplier.\
- Negative/positive values dictate direction of rotation.\
- Does not apply to GUITextures.\
\

\b shake
\b0 (obj: GameObject,x: float,y: float,z: float,duration: float,delay: float) : void\
- Randomly shakes the GameObject on each axis by the supplied magnitude.\
- Negative/positive values dictate direction of initial impact.\
\

\b stab
\b0 (obj: GameObject,sound: AudioSource,volume: float,pitch: float,delay: float) : void\
- Plays an audio clip one time based on supplied volume and pitch.\
\

\b scaleTo
\b0 (obj: GameObject,x: float,y: float,z: float,duration: float,delay: float, easing: String) : void\
- Scales the GameObject to the supplied coordinates.\
\

\b scaleFrom
\b0 (obj: GameObject,x: float,y: float,z: float,duration: float,delay: float, easing: String) : void\
- Scales the GameObject from the supplied coordinates.\
\

\b\fs28 Easing Curves:\

\b0\fs24 \
linear\
spring\
bounce\
easeInQuad\
easeOutQuad\
easeInOutQuad\
easeInCubic\
easeOutCubic\
easeInOutCubic\
easeInQuart\
easeOutQuart\
easeInOutQuart\
easeInQuint\
easeOutQuint\
easeInOutQuint\
easeInSine\
easeOutSine\
easeInOutSine\
easeInExpo\
easeOutExpo\
easeInOutExpo\
easeInCirc\
easeOutCirc\
easeInOutCirc\
easeInBack\
easeOutBack\
easeInOutBack\
\
\
\
}